{"version":3,"sources":["features/counter/Counter.module.css","pages/styles/Index.module.scss","logo.png","components/pfp.tsx","components/Link.tsx","pages/Index.tsx","GitHub.png","pages/Profile.tsx","app/hooks.ts","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/counter/Counter.tsx","App.tsx","pages/Counter.tsx","pages/goto.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Pfp","src","logo","className","styles","this","props","alt","children","React","Component","Link","external","href","to","Nav","as","NavLink","activeClassName","exact","e404","ComingSoonText","ProfileLink","dest","img","style","maxHeight","ProfilePage","textAlign","paddingTop","left","position","display","transform","GitHub","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","row","button","aria-label","onClick","textbox","onChange","e","target","asyncButton","getState","routes","path","Index","Exact","Profile","TestPageCounterPageTitle","document","location","replace","protocol","host","App","map","match","CSSTransition","in","timeout","classNames","unmountOnExit","store","configureStore","reducer","counterReducer","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc70fc4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__12uiS\",\"value\":\"Counter_value__2OG8B\",\"button\":\"Counter_button__1LDSq\",\"textbox\":\"Counter_textbox__6TswE\",\"asyncButton\":\"Counter_asyncButton__3Z8gn Counter_button__1LDSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComingSoonText\":\"Index_ComingSoonText__QZMMd\"};","export default __webpack_public_path__ + \"static/media/logo.3e8ec4e9.png\";","import React from 'react';\r\nimport styles from '../pages/styles/Index.module.scss';\r\nimport logo from '../logo.png';\r\n\r\nexport default class Pfp extends React.Component<{\r\n\tclassName?: string;\r\n}> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<img\r\n\t\t\t\tsrc={logo}\r\n\t\t\t\tclassName={`App-logo ${styles['App-logo']} ${this.props.className}`}\r\n\t\t\t\talt=\"logo\"\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</img>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nexport default class Link extends React.Component<{\r\n\thref?: string;\r\n\tto?: string;\r\n\texternal?: boolean; // use a instead of nav link\r\n}> {\r\n\trender() {\r\n\t\treturn this.props.external ? (\r\n\t\t\t<Link href={`/goto/${this.props.to || this.props.href || '/'}`}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Link>\r\n\t\t) : (\r\n\t\t\t<Nav.Link\r\n\t\t\t\tkey={this.props.to || this.props.href || '/'}\r\n\t\t\t\tas={NavLink}\r\n\t\t\t\tto={this.props.to || this.props.href || '/'}\r\n\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\texact\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Nav.Link>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Pfp from '../components/pfp';\r\nimport Link from '../components/Link';\r\n\r\nimport styles from './styles/Index.module.scss';\r\nimport './styles/Index.scss';\r\nimport './styles/Logo.scss';\r\n\r\nexport default class e404 extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Pfp />\r\n\t\t\t\t{/* <Counter /> */}\r\n\t\t\t\t<p className={`ComingSoon ${styles.ComingSoonText}`}>Coming Soon.</p>\r\n\t\t\t\t<Link to=\"/profile\">Profile</Link>\r\n\t\t\t\t<span></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","export default __webpack_public_path__ + \"static/media/GitHub.4a47a5ed.png\";","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport Pfp from '../components/pfp';\r\n\r\nimport './styles/profile.scss';\r\n\r\nimport GitHub from '../GitHub.png';\r\n\r\nclass ProfileLink extends React.Component<{\r\n\tdest: string;\r\n\timg: string;\r\n\talt?: string;\r\n}> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Link href={this.props.dest} external>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={this.props.img}\r\n\t\t\t\t\talt={this.props.alt}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmaxHeight: '1.5em',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default class ProfilePage extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"profile\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<div className=\"top\">\r\n\t\t\t\t\t\t<div className=\"profilePagePfp\">\r\n\t\t\t\t\t\t\t<Pfp className=\"profilePagePfpImg\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"middle\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\t\t\tpaddingTop: 20 + 'px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"username\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\tleft: '50%',\r\n\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t\t\t\ttransform: 'translate(-50%,0)',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"user\">0J3</span>\r\n\t\t\t\t\t\t\t<span className=\"tag\">#0001</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bottom\">\r\n\t\t\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t\t\t<ProfileLink\r\n\t\t\t\t\t\t\t\tdest=\"https://github.com/0j3/?ref=nora.lgbt/profile\"\r\n\t\t\t\t\t\t\t\timg={GitHub}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.scss';\n\nimport Index from './pages/Index';\nimport Profile from './pages/Profile';\nimport TestsCounter from './pages/Counter';\nimport Goto from './pages/goto';\n\nconst routes = [\n\t{ path: '/', Component: Index, Exact: true },\n\t{ path: '/Profile', Component: Profile },\n\t{ path: '/Tests.Counter', Component: TestsCounter },\n\t{ path: '/goto/', Component: Goto, Exact: false },\n];\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t{/* <Switch> */}\n\t\t\t{routes.map(({ path, Component, Exact = true }) => (\n\t\t\t\t<Route key={path} exact={Exact ? true : false} path={path}>\n\t\t\t\t\t{({ match }) => (\n\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\tin={match != null}\n\t\t\t\t\t\t\ttimeout={300}\n\t\t\t\t\t\t\tclassNames=\"page\"\n\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"page\">\n\t\t\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t)}\n\t\t\t\t</Route>\n\t\t\t))}\n\t\t\t{/* </Switch> */}\n\t\t\t{/* <Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Index />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<E404 />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch> */}\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import React from 'react';\r\nimport logo from '../logo.png';\r\nimport { Counter } from '../features/counter/Counter';\r\n\r\nimport styles from './styles/General.module.scss';\r\nimport './styles/Index.scss';\r\nimport './styles/Logo.scss';\r\n\r\nexport default class e404 extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\tclassName={`App-logo ${styles['App-logo']}`}\r\n\t\t\t\t\talt=\"logo\"\r\n\t\t\t\t/>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`TestPageCounterPageTitle ${styles.TestPageCounterPageTitle}`}\r\n\t\t\t\t>\r\n\t\t\t\t\tTest Counter\r\n\t\t\t\t</p>\r\n\t\t\t\t<Counter />\r\n\t\t\t\t<span></span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nexport default class ProfilePage extends React.Component {\r\n\trender() {\r\n\t\tdocument.location.replace(\r\n\t\t\tdocument.location.href.replace(\r\n\t\t\t\t`${document.location.protocol}//${document.location.host}/goto/`,\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t);\r\n\t\treturn <div>Redirecting...</div>;\r\n\t}\r\n}\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}